freebsd_task:
    freebsd_instance:
        matrix:
            - image: freebsd-11-2-release-amd64
            - image: freebsd-12-0-release-amd64

    install_script: pkg install -y rust gmake asciidoc pkgconf stfl curl json-c ncurses openssl sqlite3 gettext-tools
    setup_script:
        - pw groupadd testgroup
        - pw useradd testuser -g testgroup -w none -m
        - cp -R . /home/testuser
        - chown -R testuser:testgroup /home/testuser/
    # CI builds take a while to provision, install dependencies and compile our
    # stuff. To maximize the benefits, we ask Make to process as many rules as
    # possible before failing. This enables developers to fix more errors before
    # re-submitting the code to CI, which should increase throughput.
    #
    # Running three jobs because by default, VMs have 2 cores.
    build_script: su testuser -c 'cd ~ && RUST_BACKTRACE=1 gmake --jobs=3 --keep-going all test'
    test_script: su testuser -c 'cd ~ && ( cd test && ./test --order rand ); ret=$?; (cargo test) && sh -c "exit $ret"'

32bit_ubuntu_task:
    container:
        dockerfile: docker/ubuntu_18.04-i686.dockerfile
        memory: 8GB
    build_script: make -j3 --keep-going all test
    test_script: ( cd test && ./test --order rand ); ret=$?; (cargo test) && sh -c "exit $ret"
